; Envoy Install Script
;
;
; New version for 3.1 created by Clark Hale
;
; Based on created by Kai Bolay and further
; modified by Heinz Wrobel
;

;----------------------------------------------------------------------------
; *** LOCALIZATION SECTION -- ONLY ENGLISH AT THE MOMENT ***
( if (= @language "english")
(
  (set #use20
  (cat "You must be using Kickstart 2.04 or higher to install and use Envoy."
  ))

  (set #where
  (cat"In which disk (or drawer) should the Envoy "
      "drawer be installed or updated?"
  ))

  (set #useinet
  (cat "If you are using a TCP/IP protocol stack like AS225, INet-225, Miami, or "
       "AmiTCP, you need to have SANA-II networking devices that support "
       "multiple protocol stacks. Most devices do. \n"
       "\n"
       "By default this installation assumes that Envoy will coexist with a "
       "traditional TCP/IP stack.  The default IP and ARP numbers have been "
       "pre-set to not conflict with the default for Ethernet and Arcnet. \n"
       "\n"
       "DO NOT CHANGE THESE NUMBERS UNLESS YOU KNOW WHAT YOU ARE DOING!"
       "\n"
       "This is a difference from the original Envoy installer, where it tried "
       "to detect if a TCP/IP stack was installed and modify based on that. "
       "The installer always changes the IP and ARP numbers."
  ))

  (set #reinstall
  (cat "TBD Reinstall verbiage "
       "\n"
  ))

  (set #reinstallhelp
  (cat "TBD Reinstall help "
       "\n"
  ))

  (set #reinstallchoice1
  (cat "Yes"
  ))

  (set #reinstallchoice2
  (cat "No"
  ))

  (set #other
  (cat "\nIf you will be using a SANA-II device which has not yet been "
       "copied to DEVS:Networks, copy it there now manually.  Come back to "
       "the installer when you are done."
  ))

  (set #selectother
  (cat "Please select the SANA-II driver for your network interface. "
  ))

  (set #otherhelp
  (cat "\nEach network interface must have an associated software driver "
       "to work with Envoy.  This driver should be placed in DEVS:Networks "
       "along with any other SANA-II device drivers.  The documentation "
       "supplied with your network interface should tell you the "
       "name of the device driver needed for your network interface. "
  ))

  (set #devunit
  (cat "What is the device unit?\n"
       "\n"
       "If you don't know, the value is likely zero."
  ))

  (set #devunithelp
  (cat "SANA-II supports multiple devices installed in the "
       "same machine.  If you have only a single network "
       "interface, the value is likely 0, but if you have "
       "multiple devices of the same type, then you'll know "
       "the specific device number.  Consult your hardware's "
       "documentation for more information."
  ))

  (set #etherorarc
  (cat "\nIs this device an Ethernet or ArcNet card?\n"
  ))

  (set #etherorarchelp
  (cat "\nTBD Ethernet or ArcNet help\n"
  ))

  (set #ethernet
  (cat "Ethernet"
  ))

  (set #arcnet
  (cat "Arcnet"
  ))

  (set #askip
  (cat "Please enter the packet type number of IP packets "
       "for your network interface.\n"
       "\n"
       "THIS VALUE HAS BEEN PRE-ADJUSTED TO CO-EXIST WITH "
       "NORMAL TCP/IP STACKS!\n"
       "\n"
       "DO NOT CHANGE UNLESS YOU KNOW WHAT YOU ARE DOING!"
  ))

  (set #iphelp
  (cat "\nEnter the decimal number for the IP packet type used "
       "with your network interface.  Enter the value supplied by "
       "the documentation for your network interface if the value isn't "
       "listed below.\n"
       "\n"
       "Ethernet Interfaces:   2048 (Envoy Default) 2049 (TCP/IP Compatibility)\n"
       "ARCNET Interfaces:      240 (Envoy Default) 242 (TCP/IP Compatibility)\n"
  ))

  (set #askarp
  (cat "Please enter the packet type number of ARP packets "
       "for your Network Interface.\n\n"
       "ATTENTION! Enter \"0\" if your interface does not support ARP!\n"
       "\n"
       "THIS VALUE HAS BEEN PRE-ADJUSTED TO CO-EXIST WITH "
       "NORMAL TCP/IP STACKS!\n"
       "\n"
       "DO NOT CHANGE UNLESS YOU KNOW WHAT YOU ARE DOING!"

  ))

  (set #arphelp
  (cat "\nEnter the decimal number for the ARP packet type used "
       "with your network interface. Enter the value supplied by "
       "the documentation for your network interface if the value isn't "
       "listed below.\n"
       "\n"
       "Ethernet Interfaces:      2054 (Envoy Default) 2055 (TCP/IP Compatibility)\n"
       "ARCNET Interfaces:        241 (Envoy Default) 243 (TCP/IP Compatibility)\n"
  ))

  (set #owner
  (cat "Please enter the name of this Amiga's owner."
  ))

  (set #ownerhelp
  (cat "\nEnvoy allows you to enter the name of a person "
       "as a machine's owner.  You may leave this set to "
       "None if you wish."
  ))

  (set #name
  (cat "Please enter a network name for your Amiga."
  ))

  (set #namehelp
  (cat "\nEach machine on a network must have a unique "
       "name and number.  Machine names can have a maximum of "
       "31 characters, and may not contain a colon (:)."
  ))

  (set #subnetprompt
  (cat "Please enter the subnet prefix for your Envoy Network.\n"
       "\n"
       "For Advanced Users:\n"
       "\n"
       "If your subnet's netmask does not cleanly "
       "break on IP octet boundaries, there will be a later prompt to "
       "directly specify the IP address."

  ))

  (set #subnethelp
  (cat "Each Envoy Network needs to have a subnet specified.  For the "
       "default netmask of 255.255.255.0, this can be considered a prefix, "
       "although this is not true for all netmask.  Advanced users can "
       "specify IP address and subnet mask."
  ))

  (set #number
  (cat "Please enter a node number for your Amiga.\n"
       "\n"
       "This will be combined with the Subnet prefix "
       "to form an address."
  ))

  (set #numberhelp
  (cat "\nEach machine on a network must have a unique "
       "name and number.  Machine numbers must be in the "
       "range of 1 to 254."
  ))

  (set #netaddr
  (cat "Please confirm the network address for your Amiga."
  ))

  (set #netaddrhelp
  (cat "\nEach machine on a network must have a unique "
       "network address. \n\nSee your "
       "Envoy documentation for more information, or contact "
       "your Network Administrator."
  ))

  (set #subnet
  (cat "Is your network using a default subnet mask?\n"
       "\n"
       "Default:  255.255.255.0\n"
       "\n"
       "In almost all cases, use the default value."
  ))

  (set #subnethelp
  (cat "\nSubnet masks are used to break a large network into smaller "
       "subnetworks. \n\nIf you are unsure whether subnet masks "
       "are in use, contact your Network Administrator, or see "
       "your Envoy documentation."
;**This help message needs to tell the user something about the consequences of this choice.
; Will our docs really be able to help them with this particular question?**
  ))
  (set #submask
  (cat "Please enter the subnet mask being used on your network."
; ** If only one per network is possible, should be "...whether a subnet mask
; is in use..." in the preceding Help.  If more than one is possible, then
; this prompt needs further qualification. **
  ))
  (set #submaskhelp
  (cat "\nThe subnet mask determines what portion of a network "
       "address is used to specify the network, and what portion "
       "is used to specify a host. \n\nFor more information, see "
       "your Envoy documentation, or contact "
       "your Network Administrator."
  ))
  (set #routeraddr
  (cat "Do you want to select the network address for a default router?\n"
       "\n"
       "In almost all cases, this is not needed for Envoy."

  ))
  (set #routeraddrhelp
  (cat "\nRouters are machines that direct network traffic from one network "
       "to another. Usually each physical network has one router that "
       "is designated as the \"default\" router. \n\nIf you are not sure "
       "whether you have a default router, contact your Network "
       "Administrator."
  ))
  (set #defrouter
  (cat "Please enter the network address of the default router."
  ))
  (set #defrouterhelp
  (cat "\nAs with other hosts on a network, routers must also have "
       "a network address, usually one for each network to which they "
       "are connected. \n\nFor more information, see "
       "your Envoy documentation, or contact your Network Administrator."
; **The second part of the first sentence is confusing.  Is there one default
; router address, or several? **
  ))

  (set #realmprompt
  (cat "Do you want to set a Realm?\n"
       "\n"
       "If you don't know, answer no."
  ))

  (set #realmprompthelp
  (cat "TBD"
  ))

  (set #realm
  (cat "Please enter the name of your Amiga's Realm."
  ))
  (set #realmhelp
  (cat "\nAn Envoy Realm is a logical grouping of physical networks. "
       "Realms are typically used to organize large numbers of "
       "machines into manageable groups."
; ** This needs a little more: how about max. characters, other restrictions/suggestions, whether the
; realm must already exist, etc.  Also, Is it a grouping of networks, or of hosts?  What's the difference
; between a Realm and a subnet defined by a subnet mask?**
  ))
  (set #realmserver
  (cat "Please enter the network address of your Realm Server."
  ))
  (set #realmserverhelp
  (cat "\nA Realm Server is a machine that knows about all of the Realms "
       "that exist on your network. Enter the network address of "
       "that machine. \n\nFor more information, see "
       "your Envoy documentation, or contact your Network Administrator."
  ))



))

;----------------------------------------------------------------------------
; *** THIS IS THE ACTUAL START OF THE INSTALLATION ***

; (onerror (CLEANUP))

;(set #envoy_source "ENVOY3_Disk1:")

(if (< (/ (getversion) 65536) 37)
        (abort #use20)
)

;
; Figure out what workbench version they are using.
;

(set #WBVersion (/ (getversion "SYS:Libs/version.library") 65536))


(complete 5)

;----------------------------------------------------------------------------
; Default: no update, no delete of the old installation!
; libs, devs, and handlers into standard locations
; We use the SYS:foo notation to get it right for warped
; dumb user systems on boot.
(set #destlibs   "SYS:Libs")
(set #destl      "SYS:L")
(set #destc      "SYS:C")
(set #destdevs   "SYS:Devs")
(set #destlocale "LOCALE:")
(set #destenvarc "ENVARC:")
(set #origenvarc #destenvarc)
(set @default-dest "SYS:")
(set #devnetdir (tackon #destdevs "Networks"))

(set #envoy_dest
    (tackon
        (askdir
            (prompt #where)
            (help @askdir-help)
            (default @default-dest)
        )
        "Envoy"
    )
)

(message #envoy_dest)

(set #sysok 1)

; If the destination is already present, warn the user
; and let them bail out.
(if (exists #envoy_dest)
   (
    (if (askbool
            (prompt #reinstall)
            (help #reinstallhelp)
            (choices #reinstallchoice1 #reinstallchoice2)
            (default 1)
        )
        ; if user wants in reinstall
        (set #ok_reinstall 1)
        (exit) ; TBD Need to fail!
    )
   )
)

; Ask for device details.

(if (NOT (exists #devnetdir))
    (makedir #devnetdir)
)


(message #other)
(set #DeviceName
    (askfile
        (default #devnetdir)
        (prompt #selectother)
        (help #otherhelp)
    )
)

(set #DeviceUnit
    (asknumber
        (prompt #devunit)
        (default "0")
        (help #devunithelp)
        (range 0 10) ; not sure what max device number is
    )
)

(if (askbool
        (prompt #etherorarc)
        (help #etherorarchelp)
        (choices #ethernet #arcnet)
        (default 1)
    )
    ( ; default Ethernet
        (set #IPType 2049)
        (set #ARPType 2055)
    )
    ( ; ArcNet
        (set #IPType 242)
        (set #ARPType 243)
    )
)


(set #IPType
    (asknumber
        (default #IPType)
        (prompt #askip)
        (help #iphelp)
    )
)

(set #ARPType
    (asknumber
        (default #ARPType)
        (prompt #askarp)
        (help #arphelp)
    )
)

(set OwnerName (askstring (prompt #owner) (default "None")  (help #ownerhelp)))
(set HostName  (askstring (prompt #name)  (default "Amiga") (help #namehelp)))

; Rather than present simple vs complex.  This tries to set up IP config with
; one flow and simple defaults.

(set #SubnetPrefix
    (askstring
        (prompt #subnetprompt)
        (default "192.168.0")
        (help #subnethelp)
    )
)

(set #NodeNumber
    (asknumber
        (prompt #number)
        (default "1")
        (help #numberhelp)
        (range 1 254)
    )
)

(set #HostIP
    (askstring
        (prompt #netaddr)
        (default
            (cat #SubnetPrefix "." #NodeNumber)
        )
        (help #netaddrhelp)
    )
)

(set #SubnetMask "255.255.255.0")
(if (not (askbool (prompt #subnet) (default 1) (help #subnethelp)))
             (askstring
                 (prompt #submask)
                 (default #SubnetMask)
                 (help #submaskhelp)
             )

)

(set #DefaultRouter "None")
    (if (askbool (prompt #routeraddr) (default 1) (help #routeraddrhelp))
            (set #DefaultRouter
                (askstring
                    (prompt #defrouter)
                    (default #DefaultRouter)
                    (help #defrouterhelp)
                )
            )
)

(if (askbool (prompt #realmprompt) (default 2) (help #realmprompthelp))
        ((set #RealmName
            (askstring
                (prompt #realm)
                (default "NET")
                (help #realmhelp)
            )
        )
        (set #RealmIP
            (askstring
                (prompt #realmserver)
                (default "192.168.0.254")
                (help #realmserverhelp)
            )
        ))
)

(complete 25)



(foreach "C" "#?"
    (copylib
        (source (tackon "C" @each-name))
        (dest   "SYS:C")
        (optional "oknodelete" "force" "askuser")
    )
)

(foreach "L" "#?"
    (copylib
        (source (tackon "L" @each-name))
        (dest   "SYS:L")
        (optional "oknodelete" "force" "askuser")
    )
)

(foreach "Libs" "#?"
    (copylib
        (source (tackon "Libs" @each-name))
        (dest   "SYS:Libs")
        (optional "oknodelete" "force" "askuser")
    )
)

(foreach "Devs" "#?"
    (copylib
        (source (tackon "Devs" @each-name))
        (dest   "SYS:Devs")
        (optional "oknodelete" "force" "askuser")
    )
)

(makedir #envoy_dest (infos))
(makedir "SYS:Envoy/Configuration" (infos))
(makedir "SYS:Envoy/Accounts" (infos))
(makedir "SYS:Envoy/Services" (infos))

(foreach "Configuration" "#?"
    (copylib
        (source (tackon "Configuration" @each-name))
        (dest   "SYS:Envoy/Configuration")
        (optional "oknodelete" "force" "infos" "askuser")
    )
)

(foreach "Configuration" "#?.info"
    (copyfiles
        (source (tackon "Configuration" @each-name))
        (dest   "SYS:Envoy/Configuration")
        (optional "oknodelete" "force" "infos" "askuser")
    )
)

(foreach "Accounts" "#?"
    (copylib
        (source (tackon "Accounts" @each-name))
        (dest   "SYS:Envoy/Accounts")
        (optional "oknodelete" "force" "infos" "askuser")
    )
)

(foreach "Accounts" "#?.info"
    (copyfiles
        (source (tackon "Accounts" @each-name))
        (dest   "SYS:Envoy/Accounts")
        (optional "oknodelete" "force" "infos" "askuser")
    )
)

(foreach "Services" "#?"
    (copylib
        (source (tackon "Services" @each-name))
        (dest   "SYS:Envoy/Services")
        (optional "oknodelete" "force" "infos" "askuser")
    )
)

(foreach "Services" "#?.info"
    (copyfiles
        (source (tackon "Services" @each-name))
        (dest "SYS:Envoy/Services")
        (optional "oknodelete" "force" "infos" "askuser")
    )
)


(set UserDBPath  (tackon #envoy_dest "Accounts/UserData"))
(set GroupDBPath (tackon #envoy_dest "Accounts/GroupData"))

(tooltype
    (dest (tackon #envoy_dest "Accounts/Accounts Manager"))
    (settooltype "UserDB"  UserDBPath)
    (settooltype "GroupDB" GroupDBPath)
)

; We only copy the start icon if we are not using an AccountsServer!

(if (NOT (exists "ENV:Envoy/AccountsServer"))
  (
    (copyfiles
        (source "StartupIcons/Accounts Manager Start.info")
        (dest   "SYS:WBStartup")
    )
    (tooltype
        (dest "SYS:WBStartup/Accounts Manager Start")
;        (settooltype "UserDB"  UserDBPath)
;        (settooltype "GroupDB" GroupDBPath)
        (setdefaulttool (tackon #envoy_dest "Accounts/Accounts Manager"))
    )

  )
)



(copyfiles
    (source "StartupIcons/Services Manager Start.info")
    (dest   "SYS:WBStartup")
)

(tooltype
    (dest "SYS:WBStartup/Services Manager Start")
    (setdefaulttool (tackon #envoy_dest "Services/Services Manager"))
)


;;; CONSOLIDATE WITH OTHER MAKEDIRS

(if (NOT (exists "ENV:Envoy"))
    (makedir "ENV:Envoy")
)


(if (NOT (exists (tackon #destenvarc "Envoy")))
    (makedir (tackon #destenvarc "Envoy"))
)

(textfile
    (dest   "T:servicesconfig.txt")
    (append (cat"SERVICE \"Print Spooler\" \""
                (tackon #envoy_dest "Services/printspool.service")
                "\""
            )
    )
    (append (cat " Active\n"))
    (append "\n")

    (append (cat "SERVICE \"Filesystem\" \""
                 (tackon #envoy_dest "Services/filesystem.service")
                  "\""
            )
    )

    (append (cat " Active\n"))
    (append "\n")

)

; Use the new services manager in "batch" mode to generate the config
; Magic. Make sure to create a config first. Then load our update
(run ("\"%s\" SAVE"
      (tackon #envoy_dest "Configuration/Services Configuration")
      )
)

(run ("\"%s\" CFGFILE=T:servicesconfig.txt SAVE"
      (tackon #envoy_dest "Configuration/Services Configuration")
     )
)

;(delete "T:servicesconfig.txt")


;----------------------------------------------------------------------------
; Build a basic nipc configuration after killing the old one! f-a-i-t-h 98


(delete "ENVARC:Envoy/nipc.prefs")
(delete "ENV:Envoy/nipc.prefs")

(set #realminfo "")
(set #submaskinfo "")
(set #routeinfo "")

(if (<> NetworkType 0)
  (
;  Internet:
    (if (<> "" #RealmName)
        (set #realminfo ("REALMNAME \"%s\" REALMIP \"%s\"" #RealmName #RealmIP))
    )
    (if (<> "None" #SubnetMask)
        (set #submaskinfo ("SUBMASK \"%s\"" #SubnetMask))
    )
    (if (<> "None" #DefaultRouter)
        (set #routeinfo ("ROUTEINFO 0.0.0.0 GATEWAY \"%s\" HOPCOUNT 1\n" #DefaultRouter))
    )
  )
)

(set #HostInfo ("HOSTINFO \"%s\" %s OWNER \"%s\"\n" HostName #realminfo OwnerName))
(set #DevInfo ("\nDEVINFO \"%s\" UNIT %ld %s \"%s\" %ld %ld ACTIVE\n"
          #DeviceName #DeviceUnit #submaskinfo #HostIP #IPType #ARPType))

(textfile
    (dest   "T:nipcconfig.txt")
    (append #HostInfo)
    (append #DevInfo)
    (append #routeinfo)
)

; Magic. Make sure to create a config first. Then load our update
(run ("\"%s\" SAVE" (tackon #envoy_dest "Configuration/Network Configuration")))
(run ("\"%s\" CFGFILE=T:nipcconfig.txt SAVE"
      (tackon #envoy_dest "Configuration/Network Configuration")
     )
)
;(delete "T:nipcconfig.txt")


;; create services configuration





;;; COPY FILES
(complete 75)










